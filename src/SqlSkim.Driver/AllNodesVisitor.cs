// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;

using Microsoft.SqlServer.TransactSql.ScriptDom;

namespace Microsoft.CodeAnalysis.Sql
{
    public class AllNodesVisitor : TSqlFragmentVisitor
    {
        Action<TSqlFragment> action;

        public AllNodesVisitor(Action<TSqlFragment> action)
        {
            this.action = action;
        }

        public override void ExplicitVisit(EventDeclaration node) { this.action(node); }
        public override void ExplicitVisit(EventDeclarationSetParameter node) { this.action(node); }
        public override void ExplicitVisit(SourceDeclaration node) { this.action(node); }
        public override void ExplicitVisit(EventDeclarationCompareFunctionParameter node) { this.action(node); }
        public override void ExplicitVisit(TargetDeclaration node) { this.action(node); }
        public override void ExplicitVisit(SessionOption node) { this.action(node); }
        public override void ExplicitVisit(EventRetentionSessionOption node) { this.action(node); }
        public override void ExplicitVisit(MemoryPartitionSessionOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralSessionOption node) { this.action(node); }
        public override void ExplicitVisit(MaxDispatchLatencySessionOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffSessionOption node) { this.action(node); }
        public override void ExplicitVisit(AlterEventSessionStatement node) { this.action(node); }
        public override void ExplicitVisit(DropEventSessionStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterResourceGovernorStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateSpatialIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(SpatialIndexOption node) { this.action(node); }
        public override void ExplicitVisit(SpatialIndexRegularOption node) { this.action(node); }
        public override void ExplicitVisit(BoundingBoxSpatialIndexOption node) { this.action(node); }
        public override void ExplicitVisit(BoundingBoxParameter node) { this.action(node); }
        public override void ExplicitVisit(GridsSpatialIndexOption node) { this.action(node); }
        public override void ExplicitVisit(GridParameter node) { this.action(node); }
        public override void ExplicitVisit(CellsPerObjectSpatialIndexOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationStatement node) { this.action(node); }
        public override void ExplicitVisit(ProcessAffinityRange node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationSetBufferPoolExtensionStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationBufferPoolExtensionOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationBufferPoolExtensionContainerOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationBufferPoolExtensionSizeOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationSetDiagnosticsLogStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationDiagnosticsLogOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationDiagnosticsLogMaxSizeOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationSetFailoverClusterPropertyStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationFailoverClusterPropertyOption node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationSetHadrClusterStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerConfigurationHadrClusterOption node) { this.action(node); }
        public override void ExplicitVisit(AvailabilityGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateAvailabilityGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterAvailabilityGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AvailabilityReplica node) { this.action(node); }
        public override void ExplicitVisit(AvailabilityReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(AvailabilityModeReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(FailoverModeReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(PrimaryRoleReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(SecondaryRoleReplicaOption node) { this.action(node); }
        public override void ExplicitVisit(AvailabilityGroupOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralAvailabilityGroupOption node) { this.action(node); }
        public override void ExplicitVisit(AlterAvailabilityGroupAction node) { this.action(node); }
        public override void ExplicitVisit(AlterAvailabilityGroupFailoverAction node) { this.action(node); }
        public override void ExplicitVisit(AlterAvailabilityGroupFailoverOption node) { this.action(node); }
        public override void ExplicitVisit(DropAvailabilityGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateFederationStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterFederationStatement node) { this.action(node); }
        public override void ExplicitVisit(DropFederationStatement node) { this.action(node); }
        public override void ExplicitVisit(UseFederationStatement node) { this.action(node); }
        public override void ExplicitVisit(DiskStatement node) { this.action(node); }
        public override void ExplicitVisit(DiskStatementOption node) { this.action(node); }
        public override void ExplicitVisit(CreateColumnStoreIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(WindowFrameClause node) { this.action(node); }
        public override void ExplicitVisit(WindowDelimiter node) { this.action(node); }
        public override void ExplicitVisit(WithinGroupClause node) { this.action(node); }
        public override void ExplicitVisit(SelectiveXmlIndexPromotedPath node) { this.action(node); }
        public override void ExplicitVisit(MergeActionClause node) { this.action(node); }
        public override void ExplicitVisit(MergeAction node) { this.action(node); }
        public override void ExplicitVisit(UpdateMergeAction node) { this.action(node); }
        public override void ExplicitVisit(DeleteMergeAction node) { this.action(node); }
        public override void ExplicitVisit(InsertMergeAction node) { this.action(node); }
        public override void ExplicitVisit(CreateTypeTableStatement node) { this.action(node); }
        public override void ExplicitVisit(AuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(AuditSpecificationPart node) { this.action(node); }
        public override void ExplicitVisit(AuditSpecificationDetail node) { this.action(node); }
        public override void ExplicitVisit(AuditActionSpecification node) { this.action(node); }
        public override void ExplicitVisit(DatabaseAuditAction node) { this.action(node); }
        public override void ExplicitVisit(AuditActionGroupReference node) { this.action(node); }
        public override void ExplicitVisit(CreateDatabaseAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(DropDatabaseAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateServerAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(DropServerAuditSpecificationStatement node) { this.action(node); }
        public override void ExplicitVisit(ServerAuditStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateServerAuditStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerAuditStatement node) { this.action(node); }
        public override void ExplicitVisit(DropServerAuditStatement node) { this.action(node); }
        public override void ExplicitVisit(AuditTarget node) { this.action(node); }
        public override void ExplicitVisit(AuditOption node) { this.action(node); }
        public override void ExplicitVisit(QueueDelayAuditOption node) { this.action(node); }
        public override void ExplicitVisit(AuditGuidAuditOption node) { this.action(node); }
        public override void ExplicitVisit(OnFailureAuditOption node) { this.action(node); }
        public override void ExplicitVisit(StateAuditOption node) { this.action(node); }
        public override void ExplicitVisit(AuditTargetOption node) { this.action(node); }
        public override void ExplicitVisit(MaxSizeAuditTargetOption node) { this.action(node); }
        public override void ExplicitVisit(MaxRolloverFilesAuditTargetOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralAuditTargetOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffAuditTargetOption node) { this.action(node); }
        public override void ExplicitVisit(DatabaseEncryptionKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateDatabaseEncryptionKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseEncryptionKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(DropDatabaseEncryptionKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(ResourcePoolStatement node) { this.action(node); }
        public override void ExplicitVisit(ResourcePoolParameter node) { this.action(node); }
        public override void ExplicitVisit(ResourcePoolAffinitySpecification node) { this.action(node); }
        public override void ExplicitVisit(CreateResourcePoolStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterResourcePoolStatement node) { this.action(node); }
        public override void ExplicitVisit(DropResourcePoolStatement node) { this.action(node); }
        public override void ExplicitVisit(WorkloadGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(WorkloadGroupResourceParameter node) { this.action(node); }
        public override void ExplicitVisit(WorkloadGroupImportanceParameter node) { this.action(node); }
        public override void ExplicitVisit(WorkloadGroupParameter node) { this.action(node); }
        public override void ExplicitVisit(CreateWorkloadGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterWorkloadGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(DropWorkloadGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(BrokerPriorityStatement node) { this.action(node); }
        public override void ExplicitVisit(BrokerPriorityParameter node) { this.action(node); }
        public override void ExplicitVisit(CreateBrokerPriorityStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterBrokerPriorityStatement node) { this.action(node); }
        public override void ExplicitVisit(DropBrokerPriorityStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateFullTextStopListStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterFullTextStopListStatement node) { this.action(node); }
        public override void ExplicitVisit(FullTextStopListAction node) { this.action(node); }
        public override void ExplicitVisit(DropFullTextStopListStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateCryptographicProviderStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterCryptographicProviderStatement node) { this.action(node); }
        public override void ExplicitVisit(DropCryptographicProviderStatement node) { this.action(node); }
        public override void ExplicitVisit(EventSessionObjectName node) { this.action(node); }
        public override void ExplicitVisit(EventSessionStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSearchPropertyListStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateLoginStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateLoginSource node) { this.action(node); }
        public override void ExplicitVisit(PasswordCreateLoginSource node) { this.action(node); }
        public override void ExplicitVisit(PrincipalOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffPrincipalOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralPrincipalOption node) { this.action(node); }
        public override void ExplicitVisit(IdentifierPrincipalOption node) { this.action(node); }
        public override void ExplicitVisit(WindowsCreateLoginSource node) { this.action(node); }
        public override void ExplicitVisit(CertificateCreateLoginSource node) { this.action(node); }
        public override void ExplicitVisit(AsymmetricKeyCreateLoginSource node) { this.action(node); }
        public override void ExplicitVisit(PasswordAlterPrincipalOption node) { this.action(node); }
        public override void ExplicitVisit(AlterLoginStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterLoginOptionsStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterLoginEnableDisableStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterLoginAddDropCredentialStatement node) { this.action(node); }
        public override void ExplicitVisit(RevertStatement node) { this.action(node); }
        public override void ExplicitVisit(DropContractStatement node) { this.action(node); }
        public override void ExplicitVisit(DropEndpointStatement node) { this.action(node); }
        public override void ExplicitVisit(DropMessageTypeStatement node) { this.action(node); }
        public override void ExplicitVisit(DropQueueStatement node) { this.action(node); }
        public override void ExplicitVisit(DropRemoteServiceBindingStatement node) { this.action(node); }
        public override void ExplicitVisit(DropRouteStatement node) { this.action(node); }
        public override void ExplicitVisit(DropServiceStatement node) { this.action(node); }
        public override void ExplicitVisit(SignatureStatementBase node) { this.action(node); }
        public override void ExplicitVisit(AddSignatureStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSignatureStatement node) { this.action(node); }
        public override void ExplicitVisit(DropEventNotificationStatement node) { this.action(node); }
        public override void ExplicitVisit(ExecuteAsStatement node) { this.action(node); }
        public override void ExplicitVisit(EndConversationStatement node) { this.action(node); }
        public override void ExplicitVisit(MoveConversationStatement node) { this.action(node); }
        public override void ExplicitVisit(GetConversationGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(ReceiveStatement node) { this.action(node); }
        public override void ExplicitVisit(SendStatement node) { this.action(node); }
        public override void ExplicitVisit(WaitForSupportedStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterSchemaStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterAsymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServiceMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(BeginConversationTimerStatement node) { this.action(node); }
        public override void ExplicitVisit(BeginDialogStatement node) { this.action(node); }
        public override void ExplicitVisit(DialogOption node) { this.action(node); }
        public override void ExplicitVisit(ScalarExpressionDialogOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffDialogOption node) { this.action(node); }
        public override void ExplicitVisit(BackupCertificateStatement node) { this.action(node); }
        public override void ExplicitVisit(BackupRestoreMasterKeyStatementBase node) { this.action(node); }
        public override void ExplicitVisit(BackupServiceMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(RestoreServiceMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(BackupMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(RestoreMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(ScalarExpressionSnippet node) { this.action(node); }
        public override void ExplicitVisit(BooleanExpressionSnippet node) { this.action(node); }
        public override void ExplicitVisit(StatementListSnippet node) { this.action(node); }
        public override void ExplicitVisit(SelectStatementSnippet node) { this.action(node); }
        public override void ExplicitVisit(SchemaObjectNameSnippet node) { this.action(node); }
        public override void ExplicitVisit(TSqlFragmentSnippet node) { this.action(node); }
        public override void ExplicitVisit(TSqlStatementSnippet node) { this.action(node); }
        public override void ExplicitVisit(IdentifierSnippet node) { this.action(node); }
        public override void ExplicitVisit(TSqlScript node) { this.action(node); }
        public override void ExplicitVisit(TSqlBatch node) { this.action(node); }
        public override void ExplicitVisit(TSqlStatement node) { this.action(node); }
        public override void ExplicitVisit(DataModificationStatement node) { this.action(node); }
        public override void ExplicitVisit(DataModificationSpecification node) { this.action(node); }
        public override void ExplicitVisit(MergeStatement node) { this.action(node); }
        public override void ExplicitVisit(MergeSpecification node) { this.action(node); }
        public override void ExplicitVisit(GrandTotalGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(GroupingSetsGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(OutputClause node) { this.action(node); }
        public override void ExplicitVisit(OutputIntoClause node) { this.action(node); }
        public override void ExplicitVisit(HavingClause node) { this.action(node); }
        public override void ExplicitVisit(IdentityFunctionCall node) { this.action(node); }
        public override void ExplicitVisit(JoinParenthesisTableReference node) { this.action(node); }
        public override void ExplicitVisit(OrderByClause node) { this.action(node); }
        public override void ExplicitVisit(JoinTableReference node) { this.action(node); }
        public override void ExplicitVisit(QualifiedJoin node) { this.action(node); }
        public override void ExplicitVisit(OdbcQualifiedJoinTableReference node) { this.action(node); }
        public override void ExplicitVisit(QueryExpression node) { this.action(node); }
        public override void ExplicitVisit(QueryParenthesisExpression node) { this.action(node); }
        public override void ExplicitVisit(QuerySpecification node) { this.action(node); }
        public override void ExplicitVisit(FromClause node) { this.action(node); }
        public override void ExplicitVisit(SelectElement node) { this.action(node); }
        public override void ExplicitVisit(SelectScalarExpression node) { this.action(node); }
        public override void ExplicitVisit(SelectStarExpression node) { this.action(node); }
        public override void ExplicitVisit(SelectSetVariable node) { this.action(node); }
        public override void ExplicitVisit(TableReference node) { this.action(node); }
        public override void ExplicitVisit(TableReferenceWithAlias node) { this.action(node); }
        public override void ExplicitVisit(TableReferenceWithAliasAndColumns node) { this.action(node); }
        public override void ExplicitVisit(DataModificationTableReference node) { this.action(node); }
        public override void ExplicitVisit(ChangeTableChangesTableReference node) { this.action(node); }
        public override void ExplicitVisit(ChangeTableVersionTableReference node) { this.action(node); }
        public override void ExplicitVisit(BooleanTernaryExpression node) { this.action(node); }
        public override void ExplicitVisit(TopRowFilter node) { this.action(node); }
        public override void ExplicitVisit(OffsetClause node) { this.action(node); }
        public override void ExplicitVisit(UnaryExpression node) { this.action(node); }
        public override void ExplicitVisit(BinaryQueryExpression node) { this.action(node); }
        public override void ExplicitVisit(VariableTableReference node) { this.action(node); }
        public override void ExplicitVisit(VariableMethodCallTableReference node) { this.action(node); }
        public override void ExplicitVisit(DropPartitionFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(DropPartitionSchemeStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSynonymStatement node) { this.action(node); }
        public override void ExplicitVisit(DropAggregateStatement node) { this.action(node); }
        public override void ExplicitVisit(DropAssemblyStatement node) { this.action(node); }
        public override void ExplicitVisit(DropApplicationRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(DropFullTextCatalogStatement node) { this.action(node); }
        public override void ExplicitVisit(DropFullTextIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(DropLoginStatement node) { this.action(node); }
        public override void ExplicitVisit(DropRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(DropTypeStatement node) { this.action(node); }
        public override void ExplicitVisit(DropUserStatement node) { this.action(node); }
        public override void ExplicitVisit(DropMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(DropAsymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(DropCertificateStatement node) { this.action(node); }
        public override void ExplicitVisit(DropCredentialStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterPartitionFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterPartitionSchemeStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterFullTextIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(SimpleAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(SetStopListAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(SetSearchPropertyListAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(DropAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(AddAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(AlterColumnAlterFullTextIndexAction node) { this.action(node); }
        public override void ExplicitVisit(CreateSearchPropertyListStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterSearchPropertyListStatement node) { this.action(node); }
        public override void ExplicitVisit(SearchPropertyListAction node) { this.action(node); }
        public override void ExplicitVisit(AddSearchPropertyListAction node) { this.action(node); }
        public override void ExplicitVisit(DropSearchPropertyListAction node) { this.action(node); }
        public override void ExplicitVisit(CreateAggregateStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateEndpointStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterEndpointStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterCreateEndpointStatementBase node) { this.action(node); }
        public override void ExplicitVisit(EndpointAffinity node) { this.action(node); }
        public override void ExplicitVisit(EndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralEndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(AuthenticationEndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(PortsEndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(CompressionEndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(ListenerIPEndpointProtocolOption node) { this.action(node); }
        public override void ExplicitVisit(IPv4 node) { this.action(node); }
        public override void ExplicitVisit(SoapMethod node) { this.action(node); }
        public override void ExplicitVisit(PayloadOption node) { this.action(node); }
        public override void ExplicitVisit(EnabledDisabledPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(WsdlPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(LoginTypePayloadOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(SessionTimeoutPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(SchemaPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(CharacterSetPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(RolePayloadOption node) { this.action(node); }
        public override void ExplicitVisit(AuthenticationPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(EncryptionPayloadOption node) { this.action(node); }
        public override void ExplicitVisit(SymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateSymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(KeyOption node) { this.action(node); }
        public override void ExplicitVisit(KeySourceKeyOption node) { this.action(node); }
        public override void ExplicitVisit(AlgorithmKeyOption node) { this.action(node); }
        public override void ExplicitVisit(IdentityValueKeyOption node) { this.action(node); }
        public override void ExplicitVisit(ProviderKeyNameKeyOption node) { this.action(node); }
        public override void ExplicitVisit(CreationDispositionKeyOption node) { this.action(node); }
        public override void ExplicitVisit(AlterSymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(FullTextCatalogStatement node) { this.action(node); }
        public override void ExplicitVisit(FullTextCatalogOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffFullTextCatalogOption node) { this.action(node); }
        public override void ExplicitVisit(CreateFullTextCatalogStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterFullTextCatalogStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterCreateServiceStatementBase node) { this.action(node); }
        public override void ExplicitVisit(CreateServiceStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServiceStatement node) { this.action(node); }
        public override void ExplicitVisit(ServiceContract node) { this.action(node); }
        public override void ExplicitVisit(BinaryExpression node) { this.action(node); }
        public override void ExplicitVisit(BuiltInFunctionTableReference node) { this.action(node); }
        public override void ExplicitVisit(ComputeClause node) { this.action(node); }
        public override void ExplicitVisit(ComputeFunction node) { this.action(node); }
        public override void ExplicitVisit(PivotedTableReference node) { this.action(node); }
        public override void ExplicitVisit(UnpivotedTableReference node) { this.action(node); }
        public override void ExplicitVisit(UnqualifiedJoin node) { this.action(node); }
        public override void ExplicitVisit(TableSampleClause node) { this.action(node); }
        public override void ExplicitVisit(ScalarExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanNotExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanParenthesisExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanComparisonExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanBinaryExpression node) { this.action(node); }
        public override void ExplicitVisit(BooleanIsNullExpression node) { this.action(node); }
        public override void ExplicitVisit(ExpressionWithSortOrder node) { this.action(node); }
        public override void ExplicitVisit(GroupByClause node) { this.action(node); }
        public override void ExplicitVisit(GroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(ExpressionGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(CompositeGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(CubeGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(RollupGroupingSpecification node) { this.action(node); }
        public override void ExplicitVisit(IdentityOptions node) { this.action(node); }
        public override void ExplicitVisit(ColumnStorageOptions node) { this.action(node); }
        public override void ExplicitVisit(ConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(CreateTableStatement node) { this.action(node); }
        public override void ExplicitVisit(FederationScheme node) { this.action(node); }
        public override void ExplicitVisit(TableDataCompressionOption node) { this.action(node); }
        public override void ExplicitVisit(DataCompressionOption node) { this.action(node); }
        public override void ExplicitVisit(CompressionPartitionRange node) { this.action(node); }
        public override void ExplicitVisit(CheckConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(DefaultConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(ForeignKeyConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(NullableConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(UniqueConstraintDefinition node) { this.action(node); }
        public override void ExplicitVisit(BackupStatement node) { this.action(node); }
        public override void ExplicitVisit(BackupDatabaseStatement node) { this.action(node); }
        public override void ExplicitVisit(BackupTransactionLogStatement node) { this.action(node); }
        public override void ExplicitVisit(RestoreStatement node) { this.action(node); }
        public override void ExplicitVisit(RestoreOption node) { this.action(node); }
        public override void ExplicitVisit(ScalarExpressionRestoreOption node) { this.action(node); }
        public override void ExplicitVisit(MoveRestoreOption node) { this.action(node); }
        public override void ExplicitVisit(StopRestoreOption node) { this.action(node); }
        public override void ExplicitVisit(FileStreamRestoreOption node) { this.action(node); }
        public override void ExplicitVisit(BackupOption node) { this.action(node); }
        public override void ExplicitVisit(BackupEncryptionOption node) { this.action(node); }
        public override void ExplicitVisit(DeviceInfo node) { this.action(node); }
        public override void ExplicitVisit(MirrorToClause node) { this.action(node); }
        public override void ExplicitVisit(BackupRestoreFileInfo node) { this.action(node); }
        public override void ExplicitVisit(BulkInsertBase node) { this.action(node); }
        public override void ExplicitVisit(BulkInsertStatement node) { this.action(node); }
        public override void ExplicitVisit(InsertBulkStatement node) { this.action(node); }
        public override void ExplicitVisit(BulkInsertOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralBulkInsertOption node) { this.action(node); }
        public override void ExplicitVisit(OrderBulkInsertOption node) { this.action(node); }
        public override void ExplicitVisit(ColumnDefinitionBase node) { this.action(node); }
        public override void ExplicitVisit(InsertBulkColumnDefinition node) { this.action(node); }
        public override void ExplicitVisit(DbccStatement node) { this.action(node); }
        public override void ExplicitVisit(DbccOption node) { this.action(node); }
        public override void ExplicitVisit(DbccNamedLiteral node) { this.action(node); }
        public override void ExplicitVisit(CreateAsymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CreatePartitionFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(PartitionParameterType node) { this.action(node); }
        public override void ExplicitVisit(CreatePartitionSchemeStatement node) { this.action(node); }
        public override void ExplicitVisit(RemoteServiceBindingStatementBase node) { this.action(node); }
        public override void ExplicitVisit(RemoteServiceBindingOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffRemoteServiceBindingOption node) { this.action(node); }
        public override void ExplicitVisit(UserRemoteServiceBindingOption node) { this.action(node); }
        public override void ExplicitVisit(CreateRemoteServiceBindingStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterRemoteServiceBindingStatement node) { this.action(node); }
        public override void ExplicitVisit(EncryptionSource node) { this.action(node); }
        public override void ExplicitVisit(AssemblyEncryptionSource node) { this.action(node); }
        public override void ExplicitVisit(FileEncryptionSource node) { this.action(node); }
        public override void ExplicitVisit(ProviderEncryptionSource node) { this.action(node); }
        public override void ExplicitVisit(CertificateStatementBase node) { this.action(node); }
        public override void ExplicitVisit(AlterCertificateStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateCertificateStatement node) { this.action(node); }
        public override void ExplicitVisit(CertificateOption node) { this.action(node); }
        public override void ExplicitVisit(CreateContractStatement node) { this.action(node); }
        public override void ExplicitVisit(ContractMessage node) { this.action(node); }
        public override void ExplicitVisit(CredentialStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateCredentialStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterCredentialStatement node) { this.action(node); }
        public override void ExplicitVisit(MessageTypeStatementBase node) { this.action(node); }
        public override void ExplicitVisit(CreateMessageTypeStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterMessageTypeStatement node) { this.action(node); }
        public override void ExplicitVisit(KillStatsJobStatement node) { this.action(node); }
        public override void ExplicitVisit(CheckpointStatement node) { this.action(node); }
        public override void ExplicitVisit(ReconfigureStatement node) { this.action(node); }
        public override void ExplicitVisit(ShutdownStatement node) { this.action(node); }
        public override void ExplicitVisit(SetUserStatement node) { this.action(node); }
        public override void ExplicitVisit(TruncateTableStatement node) { this.action(node); }
        public override void ExplicitVisit(SetOnOffStatement node) { this.action(node); }
        public override void ExplicitVisit(PredicateSetStatement node) { this.action(node); }
        public override void ExplicitVisit(SetStatisticsStatement node) { this.action(node); }
        public override void ExplicitVisit(SetRowCountStatement node) { this.action(node); }
        public override void ExplicitVisit(SetOffsetsStatement node) { this.action(node); }
        public override void ExplicitVisit(SetCommand node) { this.action(node); }
        public override void ExplicitVisit(GeneralSetCommand node) { this.action(node); }
        public override void ExplicitVisit(SetFipsFlaggerCommand node) { this.action(node); }
        public override void ExplicitVisit(SetCommandStatement node) { this.action(node); }
        public override void ExplicitVisit(SetTransactionIsolationLevelStatement node) { this.action(node); }
        public override void ExplicitVisit(SetTextSizeStatement node) { this.action(node); }
        public override void ExplicitVisit(SetIdentityInsertStatement node) { this.action(node); }
        public override void ExplicitVisit(SetErrorLevelStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateDatabaseStatement node) { this.action(node); }
        public override void ExplicitVisit(FileDeclaration node) { this.action(node); }
        public override void ExplicitVisit(FileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(NameFileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(FileNameFileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(SizeFileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(MaxSizeFileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(FileGrowthFileDeclarationOption node) { this.action(node); }
        public override void ExplicitVisit(FileGroupDefinition node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseCollateStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseRebuildLogStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseAddFileStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseAddFileGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseRemoveFileGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseRemoveFileStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseModifyNameStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseModifyFileStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseModifyFileGroupStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseTermination node) { this.action(node); }
        public override void ExplicitVisit(AlterDatabaseSetStatement node) { this.action(node); }
        public override void ExplicitVisit(DatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(AutoCreateStatisticsDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(ContainmentDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(HadrDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(HadrAvailabilityGroupDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(DelayedDurabilityDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(CursorDefaultDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(RecoveryDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(TargetRecoveryTimeDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(PageVerifyDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(PartnerDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(WitnessDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(ParameterizationDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(IdentifierDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(ChangeTrackingDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(ChangeTrackingOptionDetail node) { this.action(node); }
        public override void ExplicitVisit(AutoCleanupChangeTrackingOptionDetail node) { this.action(node); }
        public override void ExplicitVisit(ChangeRetentionChangeTrackingOptionDetail node) { this.action(node); }
        public override void ExplicitVisit(FileStreamDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(MaxSizeDatabaseOption node) { this.action(node); }
        public override void ExplicitVisit(AlterTableAlterColumnStatement node) { this.action(node); }
        public override void ExplicitVisit(ColumnDefinition node) { this.action(node); }
        public override void ExplicitVisit(RoleStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterRoleAction node) { this.action(node); }
        public override void ExplicitVisit(RenameAlterRoleAction node) { this.action(node); }
        public override void ExplicitVisit(AddMemberAlterRoleAction node) { this.action(node); }
        public override void ExplicitVisit(DropMemberAlterRoleAction node) { this.action(node); }
        public override void ExplicitVisit(CreateServerRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterServerRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(DropServerRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(UserLoginOption node) { this.action(node); }
        public override void ExplicitVisit(UserStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateUserStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterUserStatement node) { this.action(node); }
        public override void ExplicitVisit(StatisticsOption node) { this.action(node); }
        public override void ExplicitVisit(ResampleStatisticsOption node) { this.action(node); }
        public override void ExplicitVisit(StatisticsPartitionRange node) { this.action(node); }
        public override void ExplicitVisit(OnOffStatisticsOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralStatisticsOption node) { this.action(node); }
        public override void ExplicitVisit(CreateStatisticsStatement node) { this.action(node); }
        public override void ExplicitVisit(UpdateStatisticsStatement node) { this.action(node); }
        public override void ExplicitVisit(ReturnStatement node) { this.action(node); }
        public override void ExplicitVisit(DeclareCursorStatement node) { this.action(node); }
        public override void ExplicitVisit(CursorDefinition node) { this.action(node); }
        public override void ExplicitVisit(CursorOption node) { this.action(node); }
        public override void ExplicitVisit(SetVariableStatement node) { this.action(node); }
        public override void ExplicitVisit(CursorId node) { this.action(node); }
        public override void ExplicitVisit(CursorStatement node) { this.action(node); }
        public override void ExplicitVisit(OpenCursorStatement node) { this.action(node); }
        public override void ExplicitVisit(CloseCursorStatement node) { this.action(node); }
        public override void ExplicitVisit(CryptoMechanism node) { this.action(node); }
        public override void ExplicitVisit(OpenSymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CloseSymmetricKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(OpenMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CloseMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(DeallocateCursorStatement node) { this.action(node); }
        public override void ExplicitVisit(FetchType node) { this.action(node); }
        public override void ExplicitVisit(FetchCursorStatement node) { this.action(node); }
        public override void ExplicitVisit(WhereClause node) { this.action(node); }
        public override void ExplicitVisit(DropUnownedObjectStatement node) { this.action(node); }
        public override void ExplicitVisit(DropObjectsStatement node) { this.action(node); }
        public override void ExplicitVisit(DropDatabaseStatement node) { this.action(node); }
        public override void ExplicitVisit(DropChildObjectsStatement node) { this.action(node); }
        public override void ExplicitVisit(DropIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(DropIndexClauseBase node) { this.action(node); }
        public override void ExplicitVisit(BackwardsCompatibleDropIndexClause node) { this.action(node); }
        public override void ExplicitVisit(DropIndexClause node) { this.action(node); }
        public override void ExplicitVisit(MoveToDropIndexOption node) { this.action(node); }
        public override void ExplicitVisit(FileStreamOnDropIndexOption node) { this.action(node); }
        public override void ExplicitVisit(DropStatisticsStatement node) { this.action(node); }
        public override void ExplicitVisit(DropTableStatement node) { this.action(node); }
        public override void ExplicitVisit(DropProcedureStatement node) { this.action(node); }
        public override void ExplicitVisit(DropFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(DropViewStatement node) { this.action(node); }
        public override void ExplicitVisit(DropDefaultStatement node) { this.action(node); }
        public override void ExplicitVisit(DropRuleStatement node) { this.action(node); }
        public override void ExplicitVisit(DropTriggerStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSchemaStatement node) { this.action(node); }
        public override void ExplicitVisit(RaiseErrorLegacyStatement node) { this.action(node); }
        public override void ExplicitVisit(RaiseErrorStatement node) { this.action(node); }
        public override void ExplicitVisit(ThrowStatement node) { this.action(node); }
        public override void ExplicitVisit(UseStatement node) { this.action(node); }
        public override void ExplicitVisit(KillStatement node) { this.action(node); }
        public override void ExplicitVisit(KillQueryNotificationSubscriptionStatement node) { this.action(node); }
        public override void ExplicitVisit(TableSwitchOption node) { this.action(node); }
        public override void ExplicitVisit(LowPriorityLockWaitTableSwitchOption node) { this.action(node); }
        public override void ExplicitVisit(DropClusteredConstraintOption node) { this.action(node); }
        public override void ExplicitVisit(DropClusteredConstraintStateOption node) { this.action(node); }
        public override void ExplicitVisit(DropClusteredConstraintValueOption node) { this.action(node); }
        public override void ExplicitVisit(DropClusteredConstraintMoveOption node) { this.action(node); }
        public override void ExplicitVisit(AlterTableDropTableElement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableDropTableElementStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableTriggerModificationStatement node) { this.action(node); }
        public override void ExplicitVisit(EnableDisableTriggerStatement node) { this.action(node); }
        public override void ExplicitVisit(TryCatchStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateTypeStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateTypeUdtStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateTypeUddtStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateSynonymStatement node) { this.action(node); }
        public override void ExplicitVisit(ExecuteAsClause node) { this.action(node); }
        public override void ExplicitVisit(QueueOption node) { this.action(node); }
        public override void ExplicitVisit(QueueStateOption node) { this.action(node); }
        public override void ExplicitVisit(QueueProcedureOption node) { this.action(node); }
        public override void ExplicitVisit(QueueValueOption node) { this.action(node); }
        public override void ExplicitVisit(QueueExecuteAsOption node) { this.action(node); }
        public override void ExplicitVisit(RouteOption node) { this.action(node); }
        public override void ExplicitVisit(RouteStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterRouteStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateRouteStatement node) { this.action(node); }
        public override void ExplicitVisit(QueueStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterQueueStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateQueueStatement node) { this.action(node); }
        public override void ExplicitVisit(IndexDefinition node) { this.action(node); }
        public override void ExplicitVisit(IndexStatement node) { this.action(node); }
        public override void ExplicitVisit(IndexType node) { this.action(node); }
        public override void ExplicitVisit(PartitionSpecifier node) { this.action(node); }
        public override void ExplicitVisit(AlterIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateXmlIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateSelectiveXmlIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(FileGroupOrPartitionScheme node) { this.action(node); }
        public override void ExplicitVisit(CreateIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(IndexOption node) { this.action(node); }
        public override void ExplicitVisit(IndexStateOption node) { this.action(node); }
        public override void ExplicitVisit(IndexExpressionOption node) { this.action(node); }
        public override void ExplicitVisit(OnlineIndexOption node) { this.action(node); }
        public override void ExplicitVisit(OnlineIndexLowPriorityLockWaitOption node) { this.action(node); }
        public override void ExplicitVisit(LowPriorityLockWaitOption node) { this.action(node); }
        public override void ExplicitVisit(LowPriorityLockWaitMaxDurationOption node) { this.action(node); }
        public override void ExplicitVisit(LowPriorityLockWaitAbortAfterWaitOption node) { this.action(node); }
        public override void ExplicitVisit(FullTextIndexColumn node) { this.action(node); }
        public override void ExplicitVisit(CreateFullTextIndexStatement node) { this.action(node); }
        public override void ExplicitVisit(FullTextIndexOption node) { this.action(node); }
        public override void ExplicitVisit(ChangeTrackingFullTextIndexOption node) { this.action(node); }
        public override void ExplicitVisit(StopListFullTextIndexOption node) { this.action(node); }
        public override void ExplicitVisit(SearchPropertyListFullTextIndexOption node) { this.action(node); }
        public override void ExplicitVisit(FullTextCatalogAndFileGroup node) { this.action(node); }
        public override void ExplicitVisit(EventTypeGroupContainer node) { this.action(node); }
        public override void ExplicitVisit(EventTypeContainer node) { this.action(node); }
        public override void ExplicitVisit(EventGroupContainer node) { this.action(node); }
        public override void ExplicitVisit(CreateEventNotificationStatement node) { this.action(node); }
        public override void ExplicitVisit(EventNotificationObjectScope node) { this.action(node); }
        public override void ExplicitVisit(MasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterMasterKeyStatement node) { this.action(node); }
        public override void ExplicitVisit(ApplicationRoleOption node) { this.action(node); }
        public override void ExplicitVisit(ApplicationRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateApplicationRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterApplicationRoleStatement node) { this.action(node); }
        public override void ExplicitVisit(ExecuteInsertSource node) { this.action(node); }
        public override void ExplicitVisit(RowValue node) { this.action(node); }
        public override void ExplicitVisit(PrintStatement node) { this.action(node); }
        public override void ExplicitVisit(UpdateCall node) { this.action(node); }
        public override void ExplicitVisit(TSEqualCall node) { this.action(node); }
        public override void ExplicitVisit(PrimaryExpression node) { this.action(node); }
        public override void ExplicitVisit(Literal node) { this.action(node); }
        public override void ExplicitVisit(IntegerLiteral node) { this.action(node); }
        public override void ExplicitVisit(NumericLiteral node) { this.action(node); }
        public override void ExplicitVisit(RealLiteral node) { this.action(node); }
        public override void ExplicitVisit(MoneyLiteral node) { this.action(node); }
        public override void ExplicitVisit(BinaryLiteral node) { this.action(node); }
        public override void ExplicitVisit(StringLiteral node) { this.action(node); }
        public override void ExplicitVisit(NullLiteral node) { this.action(node); }
        public override void ExplicitVisit(IdentifierLiteral node) { this.action(node); }
        public override void ExplicitVisit(DefaultLiteral node) { this.action(node); }
        public override void ExplicitVisit(MaxLiteral node) { this.action(node); }
        public override void ExplicitVisit(OdbcLiteral node) { this.action(node); }
        public override void ExplicitVisit(LiteralRange node) { this.action(node); }
        public override void ExplicitVisit(ValueExpression node) { this.action(node); }
        public override void ExplicitVisit(VariableReference node) { this.action(node); }
        public override void ExplicitVisit(OptionValue node) { this.action(node); }
        public override void ExplicitVisit(OnOffOptionValue node) { this.action(node); }
        public override void ExplicitVisit(LiteralOptionValue node) { this.action(node); }
        public override void ExplicitVisit(GlobalVariableExpression node) { this.action(node); }
        public override void ExplicitVisit(IdentifierOrValueExpression node) { this.action(node); }
        public override void ExplicitVisit(SchemaObjectNameOrValueExpression node) { this.action(node); }
        public override void ExplicitVisit(ParenthesisExpression node) { this.action(node); }
        public override void ExplicitVisit(ColumnReferenceExpression node) { this.action(node); }
        public override void ExplicitVisit(NextValueForExpression node) { this.action(node); }
        public override void ExplicitVisit(SequenceStatement node) { this.action(node); }
        public override void ExplicitVisit(SequenceOption node) { this.action(node); }
        public override void ExplicitVisit(DataTypeSequenceOption node) { this.action(node); }
        public override void ExplicitVisit(ScalarExpressionSequenceOption node) { this.action(node); }
        public override void ExplicitVisit(CreateSequenceStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterSequenceStatement node) { this.action(node); }
        public override void ExplicitVisit(DropSequenceStatement node) { this.action(node); }
        public override void ExplicitVisit(AssemblyStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateAssemblyStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterAssemblyStatement node) { this.action(node); }
        public override void ExplicitVisit(AssemblyOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffAssemblyOption node) { this.action(node); }
        public override void ExplicitVisit(PermissionSetAssemblyOption node) { this.action(node); }
        public override void ExplicitVisit(AddFileSpec node) { this.action(node); }
        public override void ExplicitVisit(CreateXmlSchemaCollectionStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterXmlSchemaCollectionStatement node) { this.action(node); }
        public override void ExplicitVisit(DropXmlSchemaCollectionStatement node) { this.action(node); }
        public override void ExplicitVisit(AssemblyName node) { this.action(node); }
        public override void ExplicitVisit(AlterTableStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableRebuildStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableChangeTrackingModificationStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableFileTableNamespaceStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableSetStatement node) { this.action(node); }
        public override void ExplicitVisit(TableOption node) { this.action(node); }
        public override void ExplicitVisit(LockEscalationTableOption node) { this.action(node); }
        public override void ExplicitVisit(FileStreamOnTableOption node) { this.action(node); }
        public override void ExplicitVisit(FileTableDirectoryTableOption node) { this.action(node); }
        public override void ExplicitVisit(FileTableCollateFileNameTableOption node) { this.action(node); }
        public override void ExplicitVisit(FileTableConstraintNameTableOption node) { this.action(node); }
        public override void ExplicitVisit(MemoryOptimizedTableOption node) { this.action(node); }
        public override void ExplicitVisit(DurabilityTableOption node) { this.action(node); }
        public override void ExplicitVisit(AlterTableAddTableElementStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableConstraintModificationStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterTableSwitchStatement node) { this.action(node); }
        public override void ExplicitVisit(AtomicBlockOption node) { this.action(node); }
        public override void ExplicitVisit(LiteralAtomicBlockOption node) { this.action(node); }
        public override void ExplicitVisit(IdentifierAtomicBlockOption node) { this.action(node); }
        public override void ExplicitVisit(OnOffAtomicBlockOption node) { this.action(node); }
        public override void ExplicitVisit(BeginTransactionStatement node) { this.action(node); }
        public override void ExplicitVisit(BreakStatement node) { this.action(node); }
        public override void ExplicitVisit(ColumnWithSortOrder node) { this.action(node); }
        public override void ExplicitVisit(CommitTransactionStatement node) { this.action(node); }
        public override void ExplicitVisit(RollbackTransactionStatement node) { this.action(node); }
        public override void ExplicitVisit(SaveTransactionStatement node) { this.action(node); }
        public override void ExplicitVisit(ContinueStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateDefaultStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateRuleStatement node) { this.action(node); }
        public override void ExplicitVisit(DeclareVariableElement node) { this.action(node); }
        public override void ExplicitVisit(DeclareVariableStatement node) { this.action(node); }
        public override void ExplicitVisit(GoToStatement node) { this.action(node); }
        public override void ExplicitVisit(IfStatement node) { this.action(node); }
        public override void ExplicitVisit(LabelStatement node) { this.action(node); }
        public override void ExplicitVisit(MultiPartIdentifier node) { this.action(node); }
        public override void ExplicitVisit(SchemaObjectName node) { this.action(node); }
        public override void ExplicitVisit(ChildObjectName node) { this.action(node); }
        public override void ExplicitVisit(ProcedureParameter node) { this.action(node); }
        public override void ExplicitVisit(TransactionStatement node) { this.action(node); }
        public override void ExplicitVisit(WhileStatement node) { this.action(node); }
        public override void ExplicitVisit(DeleteStatement node) { this.action(node); }
        public override void ExplicitVisit(UpdateDeleteSpecificationBase node) { this.action(node); }
        public override void ExplicitVisit(DeleteSpecification node) { this.action(node); }
        public override void ExplicitVisit(InsertStatement node) { this.action(node); }
        public override void ExplicitVisit(InsertSpecification node) { this.action(node); }
        public override void ExplicitVisit(UpdateStatement node) { this.action(node); }
        public override void ExplicitVisit(UpdateSpecification node) { this.action(node); }
        public override void ExplicitVisit(CreateSchemaStatement node) { this.action(node); }
        public override void ExplicitVisit(WaitForStatement node) { this.action(node); }
        public override void ExplicitVisit(ReadTextStatement node) { this.action(node); }
        public override void ExplicitVisit(UpdateTextStatement node) { this.action(node); }
        public override void ExplicitVisit(WriteTextStatement node) { this.action(node); }
        public override void ExplicitVisit(TextModificationStatement node) { this.action(node); }
        public override void ExplicitVisit(LineNoStatement node) { this.action(node); }
        public override void ExplicitVisit(SecurityStatement node) { this.action(node); }
        public override void ExplicitVisit(GrantStatement node) { this.action(node); }
        public override void ExplicitVisit(DenyStatement node) { this.action(node); }
        public override void ExplicitVisit(RevokeStatement node) { this.action(node); }
        public override void ExplicitVisit(AlterAuthorizationStatement node) { this.action(node); }
        public override void ExplicitVisit(Permission node) { this.action(node); }
        public override void ExplicitVisit(SecurityTargetObject node) { this.action(node); }
        public override void ExplicitVisit(SecurityTargetObjectName node) { this.action(node); }
        public override void ExplicitVisit(SecurityPrincipal node) { this.action(node); }
        public override void ExplicitVisit(SecurityStatementBody80 node) { this.action(node); }
        public override void ExplicitVisit(GrantStatement80 node) { this.action(node); }
        public override void ExplicitVisit(DenyStatement80 node) { this.action(node); }
        public override void ExplicitVisit(RevokeStatement80 node) { this.action(node); }
        public override void ExplicitVisit(SecurityElement80 node) { this.action(node); }
        public override void ExplicitVisit(CommandSecurityElement80 node) { this.action(node); }
        public override void ExplicitVisit(PrivilegeSecurityElement80 node) { this.action(node); }
        public override void ExplicitVisit(Privilege80 node) { this.action(node); }
        public override void ExplicitVisit(SecurityUserClause80 node) { this.action(node); }
        public override void ExplicitVisit(SqlCommandIdentifier node) { this.action(node); }
        public override void ExplicitVisit(SetClause node) { this.action(node); }
        public override void ExplicitVisit(AssignmentSetClause node) { this.action(node); }
        public override void ExplicitVisit(FunctionCallSetClause node) { this.action(node); }
        public override void ExplicitVisit(InsertSource node) { this.action(node); }
        public override void ExplicitVisit(ValuesInsertSource node) { this.action(node); }
        public override void ExplicitVisit(SelectInsertSource node) { this.action(node); }
        public override void ExplicitVisit(LiteralTableHint node) { this.action(node); }
        public override void ExplicitVisit(QueryDerivedTable node) { this.action(node); }
        public override void ExplicitVisit(InlineDerivedTable node) { this.action(node); }
        public override void ExplicitVisit(SubqueryComparisonPredicate node) { this.action(node); }
        public override void ExplicitVisit(ExistsPredicate node) { this.action(node); }
        public override void ExplicitVisit(LikePredicate node) { this.action(node); }
        public override void ExplicitVisit(InPredicate node) { this.action(node); }
        public override void ExplicitVisit(FullTextPredicate node) { this.action(node); }
        public override void ExplicitVisit(UserDefinedTypePropertyAccess node) { this.action(node); }
        public override void ExplicitVisit(StatementWithCtesAndXmlNamespaces node) { this.action(node); }
        public override void ExplicitVisit(SelectStatement node) { this.action(node); }
        public override void ExplicitVisit(ForClause node) { this.action(node); }
        public override void ExplicitVisit(BrowseForClause node) { this.action(node); }
        public override void ExplicitVisit(ReadOnlyForClause node) { this.action(node); }
        public override void ExplicitVisit(XmlForClause node) { this.action(node); }
        public override void ExplicitVisit(XmlForClauseOption node) { this.action(node); }
        public override void ExplicitVisit(UpdateForClause node) { this.action(node); }
        public override void ExplicitVisit(OptimizerHint node) { this.action(node); }
        public override void ExplicitVisit(LiteralOptimizerHint node) { this.action(node); }
        public override void ExplicitVisit(TableHintsOptimizerHint node) { this.action(node); }
        public override void ExplicitVisit(ForceSeekTableHint node) { this.action(node); }
        public override void ExplicitVisit(OptimizeForOptimizerHint node) { this.action(node); }
        public override void ExplicitVisit(VariableValuePair node) { this.action(node); }
        public override void ExplicitVisit(WhenClause node) { this.action(node); }
        public override void ExplicitVisit(SimpleWhenClause node) { this.action(node); }
        public override void ExplicitVisit(SearchedWhenClause node) { this.action(node); }
        public override void ExplicitVisit(CaseExpression node) { this.action(node); }
        public override void ExplicitVisit(SimpleCaseExpression node) { this.action(node); }
        public override void ExplicitVisit(SearchedCaseExpression node) { this.action(node); }
        public override void ExplicitVisit(NullIfExpression node) { this.action(node); }
        public override void ExplicitVisit(CoalesceExpression node) { this.action(node); }
        public override void ExplicitVisit(IIfCall node) { this.action(node); }
        public override void ExplicitVisit(FullTextTableReference node) { this.action(node); }
        public override void ExplicitVisit(SemanticTableReference node) { this.action(node); }
        public override void ExplicitVisit(OpenXmlTableReference node) { this.action(node); }
        public override void ExplicitVisit(OpenRowsetTableReference node) { this.action(node); }
        public override void ExplicitVisit(InternalOpenRowset node) { this.action(node); }
        public override void ExplicitVisit(BulkOpenRowset node) { this.action(node); }
        public override void ExplicitVisit(OpenQueryTableReference node) { this.action(node); }
        public override void ExplicitVisit(AdHocTableReference node) { this.action(node); }
        public override void ExplicitVisit(SchemaDeclarationItem node) { this.action(node); }
        public override void ExplicitVisit(ConvertCall node) { this.action(node); }
        public override void ExplicitVisit(TryConvertCall node) { this.action(node); }
        public override void ExplicitVisit(ParseCall node) { this.action(node); }
        public override void ExplicitVisit(TryParseCall node) { this.action(node); }
        public override void ExplicitVisit(CastCall node) { this.action(node); }
        public override void ExplicitVisit(TryCastCall node) { this.action(node); }
        public override void ExplicitVisit(FunctionCall node) { this.action(node); }
        public override void ExplicitVisit(CallTarget node) { this.action(node); }
        public override void ExplicitVisit(ExpressionCallTarget node) { this.action(node); }
        public override void ExplicitVisit(MultiPartIdentifierCallTarget node) { this.action(node); }
        public override void ExplicitVisit(UserDefinedTypeCallTarget node) { this.action(node); }
        public override void ExplicitVisit(LeftFunctionCall node) { this.action(node); }
        public override void ExplicitVisit(RightFunctionCall node) { this.action(node); }
        public override void ExplicitVisit(PartitionFunctionCall node) { this.action(node); }
        public override void ExplicitVisit(OverClause node) { this.action(node); }
        public override void ExplicitVisit(ParameterlessCall node) { this.action(node); }
        public override void ExplicitVisit(ScalarSubquery node) { this.action(node); }
        public override void ExplicitVisit(OdbcFunctionCall node) { this.action(node); }
        public override void ExplicitVisit(ExtractFromExpression node) { this.action(node); }
        public override void ExplicitVisit(OdbcConvertSpecification node) { this.action(node); }
        public override void ExplicitVisit(AlterFunctionStatement node) { this.action(node); }
        public override void ExplicitVisit(BeginEndBlockStatement node) { this.action(node); }
        public override void ExplicitVisit(BeginEndAtomicBlockStatement node) { this.action(node); }
        public override void ExplicitVisit(StatementList node) { this.action(node); }
        public override void ExplicitVisit(ExecuteStatement node) { this.action(node); }
        public override void ExplicitVisit(ExecuteOption node) { this.action(node); }
        public override void ExplicitVisit(ResultSetsExecuteOption node) { this.action(node); }
        public override void ExplicitVisit(ResultSetDefinition node) { this.action(node); }
        public override void ExplicitVisit(InlineResultSetDefinition node) { this.action(node); }
        public override void ExplicitVisit(ResultColumnDefinition node) { this.action(node); }
        public override void ExplicitVisit(SchemaObjectResultSetDefinition node) { this.action(node); }
        public override void ExplicitVisit(ExecuteSpecification node) { this.action(node); }
        public override void ExplicitVisit(ExecuteContext node) { this.action(node); }
        public override void ExplicitVisit(ExecuteParameter node) { this.action(node); }
        public override void ExplicitVisit(ExecutableEntity node) { this.action(node); }
        public override void ExplicitVisit(ProcedureReferenceName node) { this.action(node); }
        public override void ExplicitVisit(ExecutableProcedureReference node) { this.action(node); }
        public override void ExplicitVisit(ExecutableStringList node) { this.action(node); }
        public override void ExplicitVisit(AdHocDataSource node) { this.action(node); }
        public override void ExplicitVisit(ViewOption node) { this.action(node); }
        public override void ExplicitVisit(AlterViewStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateViewStatement node) { this.action(node); }
        public override void ExplicitVisit(ViewStatementBody node) { this.action(node); }
        public override void ExplicitVisit(TriggerObject node) { this.action(node); }
        public override void ExplicitVisit(TriggerOption node) { this.action(node); }
        public override void ExplicitVisit(ExecuteAsTriggerOption node) { this.action(node); }
        public override void ExplicitVisit(TriggerAction node) { this.action(node); }
        public override void ExplicitVisit(AlterTriggerStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateTriggerStatement node) { this.action(node); }
        public override void ExplicitVisit(TriggerStatementBody node) { this.action(node); }
        public override void ExplicitVisit(Identifier node) { this.action(node); }
        public override void ExplicitVisit(AlterProcedureStatement node) { this.action(node); }
        public override void ExplicitVisit(CreateProcedureStatement node) { this.action(node); }
        public override void ExplicitVisit(ProcedureReference node) { this.action(node); }
        public override void ExplicitVisit(MethodSpecifier node) { this.action(node); }
        public override void ExplicitVisit(ProcedureStatementBody node) { this.action(node); }
        public override void ExplicitVisit(ProcedureStatementBodyBase node) { this.action(node); }
        public override void ExplicitVisit(FunctionStatementBody node) { this.action(node); }
        public override void ExplicitVisit(ProcedureOption node) { this.action(node); }
        public override void ExplicitVisit(ExecuteAsProcedureOption node) { this.action(node); }
        public override void ExplicitVisit(FunctionOption node) { this.action(node); }
        public override void ExplicitVisit(ExecuteAsFunctionOption node) { this.action(node); }
        public override void ExplicitVisit(XmlNamespaces node) { this.action(node); }
        public override void ExplicitVisit(XmlNamespacesElement node) { this.action(node); }
        public override void ExplicitVisit(XmlNamespacesDefaultElement node) { this.action(node); }
        public override void ExplicitVisit(XmlNamespacesAliasElement node) { this.action(node); }
        public override void ExplicitVisit(CommonTableExpression node) { this.action(node); }
        public override void ExplicitVisit(WithCtesAndXmlNamespaces node) { this.action(node); }
        public override void ExplicitVisit(FunctionReturnType node) { this.action(node); }
        public override void ExplicitVisit(TableValuedFunctionReturnType node) { this.action(node); }
        public override void ExplicitVisit(DataTypeReference node) { this.action(node); }
        public override void ExplicitVisit(ParameterizedDataTypeReference node) { this.action(node); }
        public override void ExplicitVisit(SqlDataTypeReference node) { this.action(node); }
        public override void ExplicitVisit(UserDataTypeReference node) { this.action(node); }
        public override void ExplicitVisit(XmlDataTypeReference node) { this.action(node); }
        public override void ExplicitVisit(ScalarFunctionReturnType node) { this.action(node); }
        public override void ExplicitVisit(SelectFunctionReturnType node) { this.action(node); }
        public override void ExplicitVisit(TableDefinition node) { this.action(node); }
        public override void ExplicitVisit(DeclareTableVariableBody node) { this.action(node); }
        public override void ExplicitVisit(DeclareTableVariableStatement node) { this.action(node); }
        public override void ExplicitVisit(NamedTableReference node) { this.action(node); }
        public override void ExplicitVisit(SchemaObjectFunctionTableReference node) { this.action(node); }
        public override void ExplicitVisit(TableHint node) { this.action(node); }
        public override void ExplicitVisit(IndexTableHint node) { this.action(node); }

    }
}
