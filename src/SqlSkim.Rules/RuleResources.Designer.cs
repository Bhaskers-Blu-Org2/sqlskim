//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.CodeAnalysis.Sql.Rules {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RuleResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RuleResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CodeAnalysis.Sql.Rules.RuleResources", typeof(RuleResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review unused variables to determine whether they can be removed or if the absence of use indicates a bug in the stored procedure..
        /// </summary>
        internal static string SQL2001_RemoveUnusedVariables_Description {
            get {
                return ResourceManager.GetString("SQL2001_RemoveUnusedVariables_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you use data types of variable length such as VARCHAR, NVARCHAR, and VARBINARY, you incur an additional storage cost to track the length of the value stored in the data type. In addition, columns of variable length are stored after all columns of fixed length, which can have performance implications. This rule also fires in cases where a type of variable length, such as VARCHAR, is declared with no explicit length. In this case, if specified, the default length is 1. Note that data for types of variabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SQL2009_AvoidVariableLengthTypesOfSmallSize_Description {
            get {
                return ResourceManager.GetString("SQL2009_AvoidVariableLengthTypesOfSmallSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An inclusive integer value that specifies the upper-bound of what is regarded as a type of small size. A value of 2, for example, configures analysis to regard any type of size 1 or 2 to be regarded as small..
        /// </summary>
        internal static string SQL2009_AvoidVariableLengthTypesOfSmallSize_SmallSizeThreshold_Description {
            get {
                return ResourceManager.GetString("SQL2009_AvoidVariableLengthTypesOfSmallSize_SmallSizeThreshold_Description", resourceCulture);
            }
        }
    }
}
